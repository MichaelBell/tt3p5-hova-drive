.program hova_output
.side_set 1 opt
    set x, 4            side 1
instr_loop:
    out isr, 12
    in  isr, 4          side 1
    mov pins, isr
    jmp x--, instr_loop side 0
    out null, 32

.program hova_input
top:
    set x, 2
discard_loop:
    wait 1 gpio 0
    wait 0 gpio 0
    jmp x--, discard_loop
    
    set x, 0     [2]   ; These delays tuned for 133MHz RP2040 clock
    in  pins, 12
    ;wait 1 gpio 0
    ;wait 0 gpio 0 [1]
    pull  [4]
    mov x, osr

    in  null, 4
    mov y, pins

.wrap_target
    mov osr, y
    out null, 10
    in  osr, 4
    mov osr, y
    out null, 4
    in  osr, 2
    in  y, 2

    jmp x--, top

    mov y, pins
    mov osr, y
    out null, 22
    in osr, 4
.wrap


;    wait 0 gpio 0 [4]
;
;read_loop:
;    in  pins, 26 [3]
;    jmp x--, read_loop


% c-sdk {
void hova_pio_program_init(PIO pio) {
    const uint sm_out = 0;
    const uint sm_in = 1;

    const uint offset_out = pio_add_program(pio, &hova_output_program);
    const uint offset_in  = pio_add_program(pio, &hova_input_program);

    pio_sm_set_pins(pio, sm_out, 1);
    pio_sm_set_consecutive_pindirs(pio, sm_out, CLK, 1, true);

    pio_gpio_init(pio, CLK);
    pio_gpio_init(pio, SDI_OUT0);
    pio_gpio_init(pio, SDO_OUT1);
    pio_gpio_init(pio, nCRST_OUT2);
    pio_gpio_init(pio, CINC_OUT3);
    pio_gpio_init(pio, OUT4);
    pio_gpio_init(pio, OUT5);
    pio_gpio_init(pio, OUT6);
    pio_gpio_init(pio, OUT7);
    pio_gpio_init(pio, IN0);
    pio_gpio_init(pio, IN1);
    pio_gpio_init(pio, IN2);
    pio_gpio_init(pio, IN3);
    pio_gpio_init(pio, IN4);
    pio_gpio_init(pio, IN5);
    pio_gpio_init(pio, IN6);
    pio_gpio_init(pio, IN7);
    pio_gpio_init(pio, UIO0);
    pio_gpio_init(pio, UIO1);
    pio_gpio_init(pio, UIO2);
    pio_gpio_init(pio, UIO3);
    pio_gpio_init(pio, UIO4);
    pio_gpio_init(pio, UIO5);
    pio_gpio_init(pio, UIO6);
    pio_gpio_init(pio, UIO7);
    
    pio_sm_set_consecutive_pindirs(pio, sm_out, IN0, 4, true);
    pio_sm_set_consecutive_pindirs(pio, sm_out, IN4, 8, true);

    pio_sm_set_consecutive_pindirs(pio, sm_in, SDI_OUT0, 2, false);
    pio_sm_set_consecutive_pindirs(pio, sm_in, nCRST_OUT2, 2, false);
    pio_sm_set_consecutive_pindirs(pio, sm_in, OUT4, 4, false);
    pio_sm_set_consecutive_pindirs(pio, sm_in, UIO4, 4, false);

    pio_sm_config c = hova_output_program_get_default_config(offset_out);
    sm_config_set_in_shift(&c, false, false, 32);
    sm_config_set_out_pins(&c, IN0, 16);
    sm_config_set_out_shift(&c, true, true, 32);
    sm_config_set_sideset_pins(&c, CLK);
    sm_config_set_clkdiv(&c, 1.f);
    pio_sm_init(pio, sm_out, offset_out, &c);

    c = hova_input_program_get_default_config(offset_in);
    sm_config_set_in_shift(&c, false, true, 12);
    sm_config_set_in_pins(&c, SDI_OUT0);
    sm_config_set_out_shift(&c, true, false, 32);
    sm_config_set_clkdiv(&c, 1.f);
    pio_sm_init(pio, sm_in, offset_in, &c);

    pio_sm_set_enabled(pio, sm_out, true);
    pio_sm_set_enabled(pio, sm_in, true);
}
%}